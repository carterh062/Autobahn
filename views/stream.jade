extends layout

block content
	div.row(id="content")
		video#streamVideo
	script(src='https://code.jquery.com/jquery-2.1.3.min.js')
	script(src='https://cdn.socket.io/socket.io-1.3.4.js')
	script.
		function main(){
			var video = document.querySelector('video');
			window.URL = window.URL || window.webkitURL;
			window.MediaSource = window.MediaSource || window.WebKitMediaSource;

			if(typeof window.MediaSource == "undefined" || window.MediaSource === null)
			{
				alert('MediaSource API is not available!');
				return;
			}

			var mediaSource = new MediaSource();    
			var video = document.getElementById('streamVideo');
			video.style="display:block";
			video.src = window.URL.createObjectURL(mediaSource);
			mediaSource.addEventListener('sourceopen', function(e)
			{
				var sourceBuffer = mediaSource.addSourceBuffer('video/webm; codecs="vorbis,vp8"');
				sourceBuffer.mode = 'sequence';
				var socket = io.connect('http://ssjc-app.herokuapp.com');
				if(socket) console.log('Socket.io Working');
				myId = window.location.pathname.split( '/' )[1];

				socket.emit("init"+myId, "go");
				socket.on('clientId', function(data) {
					if (myId == data.id) {
						console.log("Connected to room")
						

						socket.on('clientStream'+myId, function (data) 
						{
							// store the buffers until you're ready for them
							// whatever normally would have called appendBuffer(buffer) can 
							// now just call queue.push(buffer) instead
								sourceBuffer.appendBuffer(new Uint8Array(data));
								console.log('appended');
									video.play();
								
							
						});
						sourceBuffer.addEventListener('updateend',function(){
							if(video.paused){
								video.play();
							}
						});
					} else {
						console.log("Not Yet")
					}
				});
				
				
			});
		}
		main();
			

